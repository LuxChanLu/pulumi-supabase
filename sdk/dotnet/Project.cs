// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Supabase
{
    [SupabaseResourceType("supabase:index:Project")]
    public partial class Project : Pulumi.CustomResource
    {
        /// <summary>
        /// Project creation date
        /// </summary>
        [Output("created_at")]
        public Output<string> Created_at { get; private set; } = null!;

        /// <summary>
        /// DB Hostname
        /// </summary>
        [Output("dbHost")]
        public Output<string> DbHost { get; private set; } = null!;

        /// <summary>
        /// DB Name
        /// </summary>
        [Output("dbName")]
        public Output<string> DbName { get; private set; } = null!;

        /// <summary>
        /// DB Port for pooled connection
        /// </summary>
        [Output("dbPoolingPort")]
        public Output<int> DbPoolingPort { get; private set; } = null!;

        /// <summary>
        /// DB Port
        /// </summary>
        [Output("dbPort")]
        public Output<int> DbPort { get; private set; } = null!;

        /// <summary>
        /// DB Username
        /// </summary>
        [Output("dbUsername")]
        public Output<string> DbUsername { get; private set; } = null!;

        /// <summary>
        /// Supabase endpoint for client
        /// </summary>
        [Output("endpoint")]
        public Output<string> Endpoint { get; private set; } = null!;

        /// <summary>
        /// Name of the project
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Organization ID of the project
        /// </summary>
        [Output("organization_id")]
        public Output<string> Organization_id { get; private set; } = null!;

        /// <summary>
        /// Region of the project
        /// </summary>
        [Output("region")]
        public Output<Pulumi.Supabase.Region> Region { get; private set; } = null!;


        /// <summary>
        /// Create a Project resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Project(string name, ProjectArgs args, CustomResourceOptions? options = null)
            : base("supabase:index:Project", name, args ?? new ProjectArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Project(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("supabase:index:Project", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Project resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Project Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Project(name, id, options);
        }
    }

    public sealed class ProjectArgs : Pulumi.ResourceArgs
    {
        [Input("db_pass", required: true)]
        private Input<string>? _db_pass;

        /// <summary>
        /// Postgres password of the project
        /// </summary>
        public Input<string>? Db_pass
        {
            get => _db_pass;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _db_pass = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// KPS Enabled on the project
        /// </summary>
        [Input("kps_enabled", required: true)]
        public Input<bool> Kps_enabled { get; set; } = null!;

        /// <summary>
        /// Name of the project
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Organization ID of the project
        /// </summary>
        [Input("organization_id", required: true)]
        public Input<string> Organization_id { get; set; } = null!;

        /// <summary>
        /// Plan of the project
        /// </summary>
        [Input("plan", required: true)]
        public Input<Pulumi.Supabase.Plan> Plan { get; set; } = null!;

        /// <summary>
        /// Region of the project
        /// </summary>
        [Input("region", required: true)]
        public Input<Pulumi.Supabase.Region> Region { get; set; } = null!;

        public ProjectArgs()
        {
        }
    }
}

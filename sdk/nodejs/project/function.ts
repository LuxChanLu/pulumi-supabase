// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

export class Function extends pulumi.ComponentResource {
    /** @internal */
    public static readonly __pulumiType = 'supabase:project:Function';

    /**
     * Returns true if the given object is an instance of Function.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Function {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Function.__pulumiType;
    }

    /**
     * Function creation date
     */
    public /*out*/ readonly created_at!: pulumi.Output<string>;
    /**
     * ID of the function
     */
    public /*out*/ readonly id!: pulumi.Output<string>;
    /**
     * Name of the function
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Slug of the function
     */
    public readonly slug!: pulumi.Output<string>;
    /**
     * Status of the function
     */
    public /*out*/ readonly status!: pulumi.Output<enums.organization.FunctionStatus>;
    /**
     * Function updated date
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;
    /**
     * Verify JWT before running
     */
    public readonly verify_jwt!: pulumi.Output<boolean>;
    /**
     * Version of the function
     */
    public /*out*/ readonly version!: pulumi.Output<number>;

    /**
     * Create a Function resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FunctionArgs, opts?: pulumi.ComponentResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.body === undefined) && !opts.urn) {
                throw new Error("Missing required property 'body'");
            }
            if ((!args || args.name === undefined) && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            if ((!args || args.slug === undefined) && !opts.urn) {
                throw new Error("Missing required property 'slug'");
            }
            resourceInputs["body"] = args?.body ? pulumi.secret(args.body) : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["slug"] = args ? args.slug : undefined;
            resourceInputs["verify_jwt"] = (args ? args.verify_jwt : undefined) ?? false;
            resourceInputs["created_at"] = undefined /*out*/;
            resourceInputs["id"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        } else {
            resourceInputs["created_at"] = undefined /*out*/;
            resourceInputs["id"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["slug"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
            resourceInputs["verify_jwt"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Function.__pulumiType, name, resourceInputs, opts, true /*remote*/);
    }
}

/**
 * The set of arguments for constructing a Function resource.
 */
export interface FunctionArgs {
    /**
     * Body of the functino
     */
    body: pulumi.Input<string>;
    /**
     * Name of the function
     */
    name: pulumi.Input<string>;
    /**
     * ID of the project
     */
    projectId: pulumi.Input<string>;
    /**
     * Slug of the function
     */
    slug: pulumi.Input<string>;
    /**
     * Verify JWT before running
     */
    verify_jwt?: pulumi.Input<boolean>;
}
